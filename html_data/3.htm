<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WebAR with A-Frame and AR.js</title>
    <!-- Include A-Frame and AR.js dependencies -->
    <script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
    <script src="https://cdn.rawgit.com/jeromeetienne/AR.js/2.3.0/aframe/build/aframe-ar.js"></script>
</head>
<body>
    <!-- AR scene -->
    <a-scene embedded arjs="sourceType: webcam; debugUIEnabled: false;">
        <!-- Define the custom marker -->
        <a-marker preset="custom" type="pattern" url="shinshiro.patt">
            <!-- Add 3D model to the marker -->
            <a-entity
                gltf-model="url(../glbdata/technology.glb)"
                scale="0.5 0.5 0.5"
            ></a-entity>
        </a-marker>

        <!-- Handle the camera for tablets -->
        <a-entity camera="userHeight: 1.6"></a-entity>

        <!-- Display video feed for tablets -->
        <a-entity
            geometry="primitive: plane; width: 16; height: 9"
            material="shader: flat; src: #videoFeed"
            position="0 0 -15"
        ></a-entity>

        <!-- Video feed source -->
        <video id="videoFeed" autoplay playsinline muted style="display: none;"></video>
    </a-scene>

    <!-- Script to handle video feed on tablets -->
    <script>
        const scene = document.querySelector('a-scene');
        const videoFeed = document.getElementById('videoFeed');
        
        // Check if the device is a tablet
        if (/iPad|Android|Tablet/.test(navigator.userAgent)) {
            navigator.mediaDevices.getUserMedia({ video: true })
                .then((stream) => {
                    videoFeed.srcObject = stream;
                    videoFeed.style.display = 'block';
                })
                .catch((error) => {
                    console.error('Error accessing camera: ', error);
                });
        } else {
            // Hide the video feed element on non-tablet devices
            videoFeed.style.display = 'none';
        }
    </script>
</body>
</html>
